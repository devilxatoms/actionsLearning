name: GitHub Actions Demo
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - run: ls
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Clone supercharge docs repository
        uses: actions/checkout@v2
        with:
          repository: buildpacks/samples
          path: samples/apps/java-maven

      - name: Build image
        uses: mamezou-tech/buildpacks-action@master
        with:
          image: "sample-java-maven-app"
          path: "samples/apps/java-maven/"
          builder: "cnbs/sample-builder:alpine"

      - name: Run Trivy vulnerability scanner for buildpack
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "sample-java-maven-app"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"

      # - name: Build an image from Dockerfile
      #   run: |
      #     docker build -t myimage .

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: 'myimage'
      #     format: 'template'
      #     template: '@/contrib/sarif.tpl'
      #     output: 'trivy-results.sarif'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: 'trivy-results.sarif'

      - name: trufflehog
        uses: ./.github/actions/trufflehog
        with:
          scanArguments: "--regex --entropy=False --max_depth=5 --rules /regexes.json -x /exclude-patterns.txt"

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: sample-java-maven-app
      # - uses: ./.github/actions/hadolint
      #   with:
      #     recursive: true

  test-mvn:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./javaApp/demo-java
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
